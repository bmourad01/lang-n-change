Context E ::= (app E e) | (app v E) | (cast E T) | (cons T E e) | (cons T v E) | (filter E e) | (filter v E) | (head T E) | (hole.) | (is_nil T E) | (ite E e e) | (tail T E)
Environment Gamma ::= [<x, T>...]
Expression e ::= x | (abs T (x)e) | (app e e) | (cast e T) | (cons T e e) | (ff.) | (filter e e) | (gcast e T T L) | (head T e) | (is_nil T e) | (ite e e e) | (nill T) | (tail T e) | (tt.)
Ground G ::= (arrow (dyn.) (dyn.)) | (bool.) | (bot.) | (list (dyn.)) | (top.)
Type T ::= (arrow T T) | (bool.) | (bot.) | (dyn.) | (list T) | (top.)
Value v ::= (abs T (x)e) | (cons T v v) | (ff.) | (gcast v G (dyn.) L) | (gcast v (arrow T T) (arrow T T) L) | (gcast v (list T) (list T) L) | (nill T) | (tt.)

%

T ~ T.
gjoin T T T.
join T T T T T.
matches T T.
meet T T T T T.
static T.
e --> e.
T <: T ==> T T.
Gamma |- e : T.
Gamma |- e ==> e : T.

%

[C-ARROW]
T1 ~ T1',
T2 ~ T2'
--------------------------------------
(arrow T1 T2) ~ (arrow T1' T2').

[C-BOOL]
--------------------------------------
(bool.) ~ (bool.).

[C-BOT]
--------------------------------------
(bot.) ~ (bot.).

[C-DYN]
--------------------------------------
(dyn.) ~ (dyn.).

[C-DYN-T]
--------------------------------------
(dyn.) ~ T.

[C-LIST]
T ~ T'
--------------------------------------
(list T) ~ (list T').

[C-T-DYN]
--------------------------------------
T ~ (dyn.).

[C-TOP]
--------------------------------------
(top.) ~ (top.).

[CC-T-ABS]
[x => T1]Gamma |- e ==> e' : T2
--------------------------------------
Gamma |- (abs T1 (x)e) ==> (abs T1 (x)e') : (arrow T1 T2).

[CC-T-APP]
Gamma |- e1 ==> e1' : M1,
matches M1 (arrow T1_1 T2),
Gamma |- e2 ==> e2' : T1_2,
T1_2 <: T1_1 ==> T1_2' T1_1',
T1_2 ~ T1_2',
T1_1 ~ T1_1'
--------------------------------------
Gamma |- (app e1 e2) ==> (app (gcast e1' M1 (arrow T1_1' T2) L1) (gcast e2' T1_2 T1_2' L2)) : T2.

[CC-T-CAST]
Gamma |- e ==> e' : T1,
T1 <: T2 ==> T1' T2',
T1 ~ T1',
T2 ~ T2'
--------------------------------------
Gamma |- (cast e T2) ==> (cast (gcast e' T1 T1' L3) T2) : T2.

[CC-T-CONS]
Gamma |- e1 ==> e1' : T_1,
Gamma |- e2 ==> e2' : M2,
matches M2 (list T_2),
join T_1 T_2 T_1 T_1' T_2',
T_1 ~ T_1',
T_2 ~ T_2',
T_1 ~ T
--------------------------------------
Gamma |- (cons T e1 e2) ==> (cons T (gcast e1' T_1 T_1' L4) (gcast e2' M2 (list T_2') L5)) : (list T).

[CC-T-FALSE]
--------------------------------------
Gamma |- (ff.) ==> (ff.) : (bool.).

[CC-T-FILTER]
Gamma |- e1 ==> e1' : M3,
matches M3 (list T_1),
Gamma |- e2 ==> e2' : M5,
matches M5 (arrow T_2 M4),
matches M4 (bool.),
T_1 <: T_2 ==> T_1' T_2',
T_1 ~ T_1',
T_2 ~ T_2'
--------------------------------------
Gamma |- (filter e1 e2) ==> (filter (gcast e1' M3 (list T_1') L6) (gcast e2' M5 (arrow T_2' (bool.)) L7)) : (list T_2).

[CC-T-HEAD]
Gamma |- e ==> e' : M6,
matches M6 (list T_1),
T_1 ~ T
--------------------------------------
Gamma |- (head T e) ==> (head T (gcast e' M6 (list T) L8)) : T.

[CC-T-IF]
Gamma |- e1 ==> e1' : M7,
matches M7 (bool.),
Gamma |- e2 ==> e2' : T_1,
Gamma |- e3 ==> e3' : T_2,
join T_1 T_2 T T_1' T_2',
T_1 ~ T_1',
T_2 ~ T_2'
--------------------------------------
Gamma |- (ite e1 e2 e3) ==> (ite (gcast e1' M7 (bool.) L9) (gcast e2' T_1 T_1' L10) (gcast e3' T_2 T_2' L11)) : T.

[CC-T-IS-NIL]
Gamma |- e ==> e' : M8,
matches M8 (list T_1),
T_1 ~ T
--------------------------------------
Gamma |- (is_nil T e) ==> (is_nil T (gcast e' M8 (list T) L12)) : (bool.).

[CC-T-NIL]
--------------------------------------
Gamma |- (nill T) ==> (nill T) : (list T).

[CC-T-TAIL]
Gamma |- e ==> e' : M9,
matches M9 (list T_1),
T_1 ~ T
--------------------------------------
Gamma |- (tail T e) ==> (tail T (gcast e' M9 (list T) L13)) : (list T).

[CC-T-TRUE]
--------------------------------------
Gamma |- (tt.) ==> (tt.) : (bool.).

[CC-T-VAR]
member <x, T> Gamma
--------------------------------------
Gamma |- x ==> x : T.

[GJOIN-ARROW]
gjoin T1 T1' T1'',
gjoin T2 T2' T2''
--------------------------------------
gjoin (arrow T1 T2) (arrow T1' T2') (arrow T1'' T2'').

[GJOIN-BOOL]
--------------------------------------
gjoin (bool.) (bool.) (bool.).

[GJOIN-BOT]
--------------------------------------
gjoin (bot.) (bot.) (bot.).

[GJOIN-DYN-T]
--------------------------------------
gjoin (dyn.) T T.

[GJOIN-LIST]
gjoin T T' T''
--------------------------------------
gjoin (list T) (list T') (list T'').

[GJOIN-T-DYN]
--------------------------------------
gjoin T (dyn.) T.

[GJOIN-TOP]
--------------------------------------
gjoin (top.) (top.) (top.).

[JOIN-ARROW]
meet T1 T3 T5 T1' T3',
join T2 T4 T6 T2' T4'
--------------------------------------
join (arrow T1 T2) (arrow T3 T4) (arrow T5 T6) (arrow T1' T2') (arrow T3' T4').

[JOIN-ARROW-BOT]
--------------------------------------
join (arrow T1 T2) (bot.) (arrow T1 T2) (arrow T1' T2') (bot.).

[JOIN-ARROW-DYN]
join (arrow T1 T2) (arrow (dyn.) (dyn.)) T1' T2' T3'
--------------------------------------
join (arrow T1 T2) (dyn.) T1' T2' T3'.

[JOIN-ARROW-TOP]
--------------------------------------
join (arrow T1 T2) (top.) (top.) (arrow T1' T2') (top.).

[JOIN-BOOL]
--------------------------------------
join (bool.) (bool.) (bool.) (bool.) (bool.).

[JOIN-BOOL-BOT]
--------------------------------------
join (bool.) (bot.) (bool.) (bool.) (bot.).

[JOIN-BOOL-DYN]
--------------------------------------
join (bool.) (dyn.) (bool.) (bool.) (bool.).

[JOIN-BOOL-TOP]
--------------------------------------
join (bool.) (top.) (top.) (bool.) (top.).

[JOIN-BOT]
--------------------------------------
join (bot.) (bot.) (bot.) (bot.) (bot.).

[JOIN-BOT-ARROW]
--------------------------------------
join (bot.) (arrow T1 T2) (arrow T1 T2) (bot.) (arrow T1' T2').

[JOIN-BOT-BOOL]
--------------------------------------
join (bot.) (bool.) (bool.) (bot.) (bool.).

[JOIN-BOT-DYN]
--------------------------------------
join (bot.) (dyn.) (bot.) (bot.) (bot.).

[JOIN-BOT-LIST]
--------------------------------------
join (bot.) (list T) (list T) (bot.) (list T').

[JOIN-BOT-TOP]
--------------------------------------
join (bot.) (top.) (top.) (bot.) (top.).

[JOIN-DYN]
--------------------------------------
join (dyn.) (dyn.) (dyn.) (dyn.) (dyn.).

[JOIN-DYN-ARROW]
join (arrow (dyn.) (dyn.)) (arrow T1 T2) T1' T2' T3'
--------------------------------------
join (dyn.) (arrow T1 T2) T1' T2' T3'.

[JOIN-DYN-BOOL]
--------------------------------------
join (dyn.) (bool.) (bool.) (bool.) (bool.).

[JOIN-DYN-BOT]
--------------------------------------
join (dyn.) (bot.) (bot.) (bot.) (bot.).

[JOIN-DYN-LIST]
join (list (dyn.)) (list T) T1' T2' T3'
--------------------------------------
join (dyn.) (list T) T1' T2' T3'.

[JOIN-DYN-TOP]
--------------------------------------
join (dyn.) (top.) (top.) (top.) (top.).

[JOIN-LIST]
join T T7 T8 T' T7'
--------------------------------------
join (list T) (list T7) (list T8) (list T') (list T7').

[JOIN-LIST-BOT]
--------------------------------------
join (list T) (bot.) (list T) (list T') (bot.).

[JOIN-LIST-DYN]
join (list T) (list (dyn.)) T1' T2' T3'
--------------------------------------
join (list T) (dyn.) T1' T2' T3'.

[JOIN-LIST-TOP]
--------------------------------------
join (list T) (top.) (top.) (list T') (top.).

[JOIN-TOP]
--------------------------------------
join (top.) (top.) (top.) (top.) (top.).

[JOIN-TOP-ARROW]
--------------------------------------
join (top.) (arrow T1 T2) (top.) (top.) (arrow T1' T2').

[JOIN-TOP-BOOL]
--------------------------------------
join (top.) (bool.) (top.) (top.) (bool.).

[JOIN-TOP-BOT]
--------------------------------------
join (top.) (bot.) (top.) (top.) (bot.).

[JOIN-TOP-DYN]
--------------------------------------
join (top.) (dyn.) (top.) (top.) (top.).

[JOIN-TOP-LIST]
--------------------------------------
join (top.) (list T) (top.) (top.) (list T').

[MATCHES-ARROW]
--------------------------------------
matches (arrow T1 T2) (arrow T1 T2).

[MATCHES-BOOL]
--------------------------------------
matches (bool.) (bool.).

[MATCHES-BOT]
--------------------------------------
matches (bot.) (bot.).

[MATCHES-DYN-ARROW]
--------------------------------------
matches (dyn.) (arrow (dyn.) (dyn.)).

[MATCHES-DYN-BOOL]
--------------------------------------
matches (dyn.) (bool.).

[MATCHES-DYN-BOT]
--------------------------------------
matches (dyn.) (bot.).

[MATCHES-DYN-LIST]
--------------------------------------
matches (dyn.) (list (dyn.)).

[MATCHES-DYN-TOP]
--------------------------------------
matches (dyn.) (top.).

[MATCHES-LIST]
--------------------------------------
matches (list T) (list T).

[MATCHES-TOP]
--------------------------------------
matches (top.) (top.).

[MEET-ARROW]
join T1 T9 T11 T1' T9',
meet T2 T10 T12 T2' T10'
--------------------------------------
meet (arrow T1 T2) (arrow T9 T10) (arrow T11 T12) (arrow T1' T2') (arrow T9' T10').

[MEET-ARROW-BOT]
--------------------------------------
meet (arrow T1 T2) (bot.) (bot.) (arrow T1' T2') (bot.).

[MEET-ARROW-DYN]
meet (arrow T1 T2) (arrow (dyn.) (dyn.)) T1' T2' T3'
--------------------------------------
meet (arrow T1 T2) (dyn T1 T2) T1' T2' T3'.

[MEET-ARROW-TOP]
--------------------------------------
meet (arrow T1 T2) (top.) (arrow T1 T2) (arrow T1' T2') (top.).

[MEET-BOOL]
--------------------------------------
meet (bool.) (bool.) (bool.) (bool.) (bool.).

[MEET-BOOL-BOT]
--------------------------------------
meet (bool.) (bot.) (bot.) (bool.) (bot.).

[MEET-BOOL-DYN]
--------------------------------------
meet (bool.) (dyn.) (dyn.) (bool.) (bool.).

[MEET-BOOL-TOP]
--------------------------------------
meet (bool.) (top.) (bool.) (bool.) (top.).

[MEET-BOT]
--------------------------------------
meet (bot.) (bot.) (bot.) (bot.) (bot.).

[MEET-BOT-ARROW]
--------------------------------------
meet (bot.) (arrow T1 T2) (bot.) (bot.) (arrow T1' T2').

[MEET-BOT-BOOL]
--------------------------------------
meet (bot.) (bool.) (bot.) (bot.) (bool.).

[MEET-BOT-DYN]
--------------------------------------
meet (bot.) (dyn.) (dyn.) (bot.) (bot.).

[MEET-BOT-LIST]
--------------------------------------
meet (bot.) (list T) (bot.) (bot.) (list T').

[MEET-BOT-TOP]
--------------------------------------
meet (bot.) (top.) (bot.) (bot.) (top.).

[MEET-DYN]
--------------------------------------
meet (dyn.) (dyn.) (dyn.) (dyn.) (dyn.).

[MEET-DYN-ARROW]
meet (arrow (dyn.) (dyn.)) (arrow T1 T2) T1' T2' T3'
--------------------------------------
meet (dyn.) (arrow T1 T2) T1' T2' T3'.

[MEET-DYN-BOOL]
--------------------------------------
meet (dyn.) (bool.) (dyn.) (bool.) (bool.).

[MEET-DYN-BOT]
--------------------------------------
meet (dyn.) (bot.) (dyn.) (bot.) (bot.).

[MEET-DYN-LIST]
meet (list (dyn.)) (list T) T1' T2' T3'
--------------------------------------
meet (dyn.) (list T) T1' T2' T3'.

[MEET-DYN-TOP]
--------------------------------------
meet (dyn.) (top.) (dyn.) (top.) (top.).

[MEET-LIST]
meet T T13 T14 T' T13'
--------------------------------------
meet (list T) (list T13) (list T14) (list T') (list T13').

[MEET-LIST-BOT]
--------------------------------------
meet (list T) (bot.) (bot.) (list T') (bot.).

[MEET-LIST-DYN]
meet (list T) (list (dyn.)) T1' T2' T3'
--------------------------------------
meet (list T) (dyn T) T1' T2' T3'.

[MEET-LIST-TOP]
--------------------------------------
meet (list T) (top.) (list T) (list T') (top.).

[MEET-TOP]
--------------------------------------
meet (top.) (top.) (top.) (top.) (top.).

[MEET-TOP-ARROW]
--------------------------------------
meet (top.) (arrow T1 T2) (arrow T1 T2) (top.) (arrow T1' T2').

[MEET-TOP-BOOL]
--------------------------------------
meet (top.) (bool.) (bool.) (top.) (bool.).

[MEET-TOP-BOT]
--------------------------------------
meet (top.) (bot.) (bot.) (top.) (bot.).

[MEET-TOP-DYN]
--------------------------------------
meet (top.) (dyn.) (dyn.) (top.) (top.).

[MEET-TOP-LIST]
--------------------------------------
meet (top.) (list T) (list T) (top.) (list T').

[R-BETA]
--------------------------------------
(app (abs T (x)e) v) --> e{v/x}.

[R-CAST]
--------------------------------------
(cast v T) --> v.

[R-FILTER-CONS]
--------------------------------------
(filter (cons T v1 v2) v3) --> (ite (app v3 v1) (cons T v1 (filter v2 v3)) (filter v2 v3)).

[R-FILTER-NIL]
--------------------------------------
(filter (nill T) v) --> (nill T).

[R-HEAD-CONS]
--------------------------------------
(head T (cons T v1 v2)) --> v1.

[R-IF-FALSE]
--------------------------------------
(ite (ff.) e1 e2) --> e2.

[R-IF-TRUE]
--------------------------------------
(ite (tt.) e1 e2) --> e1.

[R-IS-NIL-FALSE]
--------------------------------------
(is_nil T (cons T v1 v2)) --> (ff.).

[R-IS-NIL-TRUE]
--------------------------------------
(is_nil T (nill T)) --> (tt.).

[R-TAIL-CONS]
--------------------------------------
(tail T (cons T v1 v2)) --> v2.

[S-ARROW]
T15 <: T1 ==> T15' T1',
T2 <: T16 ==> T2' T16'
--------------------------------------
(arrow T1 T2) <: (arrow T15 T16) ==> (arrow T1' T2') (arrow T15' T16').

[S-ARROW-DYN]
(arrow T1 T2) <: (arrow (dyn.) (dyn.)) ==> T1' T2'
--------------------------------------
(arrow T1 T2) <: (dyn.) ==> T1' T2'.

[S-BOOL]
--------------------------------------
(bool.) <: (bool.) ==> (bool.) (bool.).

[S-BOOL-DYN]
--------------------------------------
(bool.) <: (dyn.) ==> (bool.) (bool.).

[S-BOT]
--------------------------------------
(bot.) <: (bot.) ==> (bot.) (bot.).

[S-BOT-ARROW]
--------------------------------------
(bot.) <: (arrow T1 T2) ==> (bot.) (arrow T1' T2').

[S-BOT-BOOL]
--------------------------------------
(bot.) <: (bool.) ==> (bot.) (bool.).

[S-BOT-BOT]
--------------------------------------
(bot.) <: (bot.) ==> (bot.) (bot.).

[S-BOT-DYN]
--------------------------------------
(bot.) <: (dyn.) ==> (bot.) (bot.).

[S-BOT-LIST]
--------------------------------------
(bot.) <: (list T) ==> (bot.) (list T').

[S-BOT-TOP]
--------------------------------------
(bot.) <: (top.) ==> (bot.) (top.).

[S-DYN]
--------------------------------------
(dyn.) <: (dyn.) ==> (dyn.) (dyn.).

[S-DYN-ARROW]
(arrow (dyn.) (dyn.)) <: (arrow T1 T2) ==> T1' T2'
--------------------------------------
(dyn.) <: (arrow T1 T2) ==> T1' T2'.

[S-DYN-BOOL]
--------------------------------------
(dyn.) <: (bool.) ==> (bool.) (bool.).

[S-DYN-BOT]
--------------------------------------
(dyn.) <: (bot.) ==> (bot.) (bot.).

[S-DYN-LIST]
(list (dyn.)) <: (list T) ==> T1' T2'
--------------------------------------
(dyn.) <: (list T) ==> T1' T2'.

[S-DYN-TOP]
--------------------------------------
(dyn.) <: (top.) ==> (top.) (top.).

[S-LIST]
T <: T17 ==> T' T17'
--------------------------------------
(list T) <: (list T17) ==> (list T') (list T17').

[S-LIST-DYN]
(list T) <: (list (dyn.)) ==> T1' T2'
--------------------------------------
(list T) <: (dyn.) ==> T1' T2'.

[S-TOP]
--------------------------------------
(top.) <: (top.) ==> (top.) (top.).

[S-TOP-ARROW]
--------------------------------------
(arrow T1 T2) <: (top.) ==> (arrow T1' T2') (top.).

[S-TOP-BOOL]
--------------------------------------
(bool.) <: (top.) ==> (bool.) (top.).

[S-TOP-BOT]
--------------------------------------
(bot.) <: (top.) ==> (bot.) (top.).

[S-TOP-DYN]
--------------------------------------
(top.) <: (dyn.) ==> (top.) (top.).

[S-TOP-LIST]
--------------------------------------
(list T) <: (top.) ==> (list T') (top.).

[S-TOP-TOP]
--------------------------------------
(top.) <: (top.) ==> (top.) (top.).

[STATIC-ARROW]
static T1,
static T2
--------------------------------------
static (arrow T1 T2).

[STATIC-BOOL]
--------------------------------------
static (bool.).

[STATIC-BOT]
--------------------------------------
static (bot.).

[STATIC-LIST]
static T
--------------------------------------
static (list T).

[STATIC-TOP]
--------------------------------------
static (top.).

[T-ABS]
[x => T1]Gamma |- e : T2
--------------------------------------
Gamma |- (abs T1 (x)e) : (arrow T1 T2).

[T-APP]
Gamma |- e1 : M1,
matches M1 (arrow T1_1 T2),
Gamma |- e2 : T1_2,
T1_2 <: T1_1 ==> T1_2' T1_1',
T1_2 ~ T1_2',
T1_1 ~ T1_1'
--------------------------------------
Gamma |- (app e1 e2) : T2.

[T-CAST]
Gamma |- e : T1,
T1 <: T2 ==> T1' T2',
T1 ~ T1',
T2 ~ T2'
--------------------------------------
Gamma |- (cast e T2) : T2.

[T-CONS]
Gamma |- e1 : T_1,
Gamma |- e2 : M2,
matches M2 (list T_2),
join T_1 T_2 T_1 T_1' T_2',
T_1 ~ T_1',
T_2 ~ T_2',
T_1 ~ T
--------------------------------------
Gamma |- (cons T e1 e2) : (list T).

[T-FALSE]
--------------------------------------
Gamma |- (ff.) : (bool.).

[T-FILTER]
Gamma |- e1 : M3,
matches M3 (list T_1),
Gamma |- e2 : M5,
matches M5 (arrow T_2 M4),
matches M4 (bool.),
T_1 <: T_2 ==> T_1' T_2',
T_1 ~ T_1',
T_2 ~ T_2'
--------------------------------------
Gamma |- (filter e1 e2) : (list T_2).

[T-GCAST]
Gamma |- e : T1,
T1 ~ T2
--------------------------------------
Gamma |- (gcast e T1 T2 L) : T2.

[T-HEAD]
Gamma |- e : M6,
matches M6 (list T_1),
T_1 ~ T
--------------------------------------
Gamma |- (head T e) : T.

[T-IF]
Gamma |- e1 : M7,
matches M7 (bool.),
Gamma |- e2 : T_1,
Gamma |- e3 : T_2,
join T_1 T_2 T T_1' T_2',
T_1 ~ T_1',
T_2 ~ T_2'
--------------------------------------
Gamma |- (ite e1 e2 e3) : T.

[T-IS-NIL]
Gamma |- e : M8,
matches M8 (list T_1),
T_1 ~ T
--------------------------------------
Gamma |- (is_nil T e) : (bool.).

[T-NIL]
--------------------------------------
Gamma |- (nill T) : (list T).

[T-TAIL]
Gamma |- e : M9,
matches M9 (list T_1),
T_1 ~ T
--------------------------------------
Gamma |- (tail T e) : (list T).

[T-TRUE]
--------------------------------------
Gamma |- (tt.) : (bool.).

[T-VAR]
member <x, T> Gamma
--------------------------------------
Gamma |- x : T.

%

eliminationform: app => 0 | filter => 0 | head => 1 | is_nil => 1 | ite => 0 | tail => 1.
mode: consistent => inp inp | gjoin => inp inp out | join => inp inp out out out | matches => inp out | meet => inp inp out out out | static => inp | step => inp out | subtype_flow => inp inp out out | typeof => inp inp out | typeof_cc => inp inp out out.
principal: consistent => yes yes | gjoin => yes yes no | join => yes yes no no no | matches => yes no | meet => yes yes no no no | static => yes | step => yes no | subtype_flow => yes yes no no | typeof => no yes no | typeof_cc => no yes no no.
variance: arrow => contra cov | list => cov.
