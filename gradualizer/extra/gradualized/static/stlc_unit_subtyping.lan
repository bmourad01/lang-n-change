Context E ::= (app E e) | (app v E) | (cast E T) | (hole.)
Environment Gamma ::= [<x, T>...]
Expression e ::= x | (abs T (x)e) | (app e e) | (cast e T) | (gcast e T T L) | (unit.)
Ground G ::= (arrow (dyn.) (dyn.)) | (unitT.)
Type T ::= (arrow T T) | (dyn.) | (unitT.)
Value v ::= (abs T (x)e) | (gcast v G (dyn.) L) | (gcast v (arrow T T) (arrow T T) L) | (unit.)

%

T ~ T.
gjoin T T T.
join T T T T T.
matches T T.
meet T T T T T.
static T.
e --> e.
T <: T ==> T T.
Gamma |- e : T.
Gamma |- e ==> e : T.

%

[C-ARROW]
T1 ~ T1',
T2 ~ T2'
--------------------------------------
(arrow T1 T2) ~ (arrow T1' T2').

[C-DYN]
--------------------------------------
(dyn.) ~ (dyn.).

[C-DYN-T]
--------------------------------------
(dyn.) ~ T.

[C-T-DYN]
--------------------------------------
T ~ (dyn.).

[C-UNITT]
--------------------------------------
(unitT.) ~ (unitT.).

[CC-T-ABS]
[x => T1]Gamma |- e ==> e' : T2
--------------------------------------
Gamma |- (abs T1 (x)e) ==> (abs T1 (x)e') : (arrow T1 T2).

[CC-T-APP]
Gamma |- e1 ==> e1' : M1,
matches M1 (arrow T1_1 T2),
Gamma |- e2 ==> e2' : T1_2,
T1_2 <: T1_1 ==> T1_2' T1_1',
T1_2 ~ T1_2',
T1_1 ~ T1_1'
--------------------------------------
Gamma |- (app e1 e2) ==> (app (gcast e1' M1 (arrow T1_1' T2) L1) (gcast e2' T1_2 T1_2' L2)) : T2.

[CC-T-CAST]
Gamma |- e ==> e' : T1,
T1 <: T2 ==> T1' T2',
T1 ~ T1',
T2 ~ T2'
--------------------------------------
Gamma |- (cast e T2) ==> (cast (gcast e' T1 T1' L3) T2) : T2.

[CC-T-UNIT]
--------------------------------------
Gamma |- (unit.) ==> (unit.) : (unitT.).

[CC-T-VAR]
member <x, T> Gamma
--------------------------------------
Gamma |- x ==> x : T.

[GJOIN-ARROW]
gjoin T1 T1' T1'',
gjoin T2 T2' T2''
--------------------------------------
gjoin (arrow T1 T2) (arrow T1' T2') (arrow T1'' T2'').

[GJOIN-DYN-T]
--------------------------------------
gjoin (dyn.) T T.

[GJOIN-T-DYN]
--------------------------------------
gjoin T (dyn.) T.

[GJOIN-UNITT]
--------------------------------------
gjoin (unitT.) (unitT.) (unitT.).

[JOIN-ARROW]
meet T1 T3 T5 T1' T3',
join T2 T4 T6 T2' T4'
--------------------------------------
join (arrow T1 T2) (arrow T3 T4) (arrow T5 T6) (arrow T1' T2') (arrow T3' T4').

[JOIN-ARROW-DYN]
join (arrow T1 T2) (arrow (dyn.) (dyn.)) T1' T2' T3'
--------------------------------------
join (arrow T1 T2) (dyn.) T1' T2' T3'.

[JOIN-DYN]
--------------------------------------
join (dyn.) (dyn.) (dyn.) (dyn.) (dyn.).

[JOIN-DYN-ARROW]
join (arrow (dyn.) (dyn.)) (arrow T1 T2) T1' T2' T3'
--------------------------------------
join (dyn.) (arrow T1 T2) T1' T2' T3'.

[JOIN-DYN-UNITT]
--------------------------------------
join (dyn.) (unitT.) (unitT.) (unitT.) (unitT.).

[JOIN-UNITT]
--------------------------------------
join (unitT.) (unitT.) (unitT.) (unitT.) (unitT.).

[JOIN-UNITT-DYN]
--------------------------------------
join (unitT.) (dyn.) (unitT.) (unitT.) (unitT.).

[MATCHES-ARROW]
--------------------------------------
matches (arrow T1 T2) (arrow T1 T2).

[MATCHES-DYN-ARROW]
--------------------------------------
matches (dyn.) (arrow (dyn.) (dyn.)).

[MATCHES-DYN-UNITT]
--------------------------------------
matches (dyn.) (unitT.).

[MATCHES-UNITT]
--------------------------------------
matches (unitT.) (unitT.).

[MEET-ARROW]
join T1 T7 T9 T1' T7',
meet T2 T8 T10 T2' T8'
--------------------------------------
meet (arrow T1 T2) (arrow T7 T8) (arrow T9 T10) (arrow T1' T2') (arrow T7' T8').

[MEET-ARROW-DYN]
meet (arrow T1 T2) (arrow (dyn.) (dyn.)) T1' T2' T3'
--------------------------------------
meet (arrow T1 T2) (dyn T1 T2) T1' T2' T3'.

[MEET-DYN]
--------------------------------------
meet (dyn.) (dyn.) (dyn.) (dyn.) (dyn.).

[MEET-DYN-ARROW]
meet (arrow (dyn.) (dyn.)) (arrow T1 T2) T1' T2' T3'
--------------------------------------
meet (dyn.) (arrow T1 T2) T1' T2' T3'.

[MEET-DYN-UNITT]
--------------------------------------
meet (dyn.) (unitT.) (dyn.) (unitT.) (unitT.).

[MEET-UNITT]
--------------------------------------
meet (unitT.) (unitT.) (unitT.) (unitT.) (unitT.).

[MEET-UNITT-DYN]
--------------------------------------
meet (unitT.) (dyn.) (dyn.) (unitT.) (unitT.).

[R-BETA]
--------------------------------------
(app (abs T (x)e) v) --> e{v/x}.

[R-CAST]
--------------------------------------
(cast v T) --> v.

[S-ARROW]
T11 <: T1 ==> T11' T1',
T2 <: T12 ==> T2' T12'
--------------------------------------
(arrow T1 T2) <: (arrow T11 T12) ==> (arrow T1' T2') (arrow T11' T12').

[S-ARROW-DYN]
(arrow T1 T2) <: (arrow (dyn.) (dyn.)) ==> T1' T2'
--------------------------------------
(arrow T1 T2) <: (dyn.) ==> T1' T2'.

[S-DYN]
--------------------------------------
(dyn.) <: (dyn.) ==> (dyn.) (dyn.).

[S-DYN-ARROW]
(arrow (dyn.) (dyn.)) <: (arrow T1 T2) ==> T1' T2'
--------------------------------------
(dyn.) <: (arrow T1 T2) ==> T1' T2'.

[S-DYN-UNITT]
--------------------------------------
(dyn.) <: (unitT.) ==> (unitT.) (unitT.).

[S-UNITT]
--------------------------------------
(unitT.) <: (unitT.) ==> (unitT.) (unitT.).

[S-UNITT-DYN]
--------------------------------------
(unitT.) <: (dyn.) ==> (unitT.) (unitT.).

[STATIC-ARROW]
static T1,
static T2
--------------------------------------
static (arrow T1 T2).

[STATIC-UNITT]
--------------------------------------
static (unitT.).

[T-ABS]
[x => T1]Gamma |- e : T2
--------------------------------------
Gamma |- (abs T1 (x)e) : (arrow T1 T2).

[T-APP]
Gamma |- e1 : M1,
matches M1 (arrow T1_1 T2),
Gamma |- e2 : T1_2,
T1_2 <: T1_1 ==> T1_2' T1_1',
T1_2 ~ T1_2',
T1_1 ~ T1_1'
--------------------------------------
Gamma |- (app e1 e2) : T2.

[T-CAST]
Gamma |- e : T1,
T1 <: T2 ==> T1' T2',
T1 ~ T1',
T2 ~ T2'
--------------------------------------
Gamma |- (cast e T2) : T2.

[T-GCAST]
Gamma |- e : T1,
T1 ~ T2
--------------------------------------
Gamma |- (gcast e T1 T2 L) : T2.

[T-UNIT]
--------------------------------------
Gamma |- (unit.) : (unitT.).

[T-VAR]
member <x, T> Gamma
--------------------------------------
Gamma |- x : T.

%

eliminationform: app => 0.
mode: consistent => inp inp | gjoin => inp inp out | join => inp inp out out out | matches => inp out | meet => inp inp out out out | static => inp | step => inp out | subtype_flow => inp inp out out | typeof => inp inp out | typeof_cc => inp inp out out.
principal: consistent => yes yes | gjoin => yes yes no | join => yes yes no no no | matches => yes no | meet => yes yes no no no | static => yes | step => yes no | subtype_flow => yes yes no no | typeof => no yes no | typeof_cc => no yes no no.
variance: arrow => contra cov.
