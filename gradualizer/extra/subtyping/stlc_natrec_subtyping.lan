Context E ::= (app E e) | (app v E) | (cast E T) | (hole.) | (natrec E e e) | (natrec v E e) | (natrec v v E) | (succ E)
Environment Gamma ::= [<x, T>...]
Expression e ::= x | (abs T (x)e) | (app e e) | (cast e T) | (natrec e e e) | (succ e) | (zero.)
Type T ::= (arrow T T) | (nat.)
Value v ::= (abs T (x)e) | (succ v) | (zero.)

%

join T T T.
meet T T T.
e --> e.
T <: T.
Gamma |- e : T.

%

[JOIN-ARROW]
meet T1 T3 T5,
join T2 T4 T6
--------------------------------------
join (arrow T1 T2) (arrow T3 T4) (arrow T5 T6).

[JOIN-NAT]
--------------------------------------
join (nat.) (nat.) (nat.).

[MEET-ARROW]
join T1 T7 T9,
meet T2 T8 T10
--------------------------------------
meet (arrow T1 T2) (arrow T7 T8) (arrow T9 T10).

[MEET-NAT]
--------------------------------------
meet (nat.) (nat.) (nat.).

[R-BETA]
--------------------------------------
(app (abs T (x)e) v) --> e{v/x}.

[R-CAST]
--------------------------------------
(cast v T) --> v.

[R-NAREC-SUCC]
--------------------------------------
(natrec (succ v1) v2 v3) --> (app (app v3 v1) (natrec v1 v2 v3)).

[R-NATREC-ZERO]
--------------------------------------
(natrec (zero.) v1 v2) --> v1.

[S-ARROW]
T11 <: T1,
T2 <: T12
--------------------------------------
(arrow T1 T2) <: (arrow T11 T12).

[S-NAT]
--------------------------------------
(nat.) <: (nat.).

[T-ABS]
[x => T1]Gamma |- e : T2
--------------------------------------
Gamma |- (abs T1 (x)e) : (arrow T1 T2).

[T-APP]
Gamma |- e1 : (arrow T1_1 T2),
Gamma |- e2 : T1_2,
T1_2 <: T1_1
--------------------------------------
Gamma |- (app e1 e2) : T2.

[T-CAST]
Gamma |- e : T1,
T1 <: T2
--------------------------------------
Gamma |- (cast e T2) : T2.

[T-NATREC]
Gamma |- e1 : (nat.),
Gamma |- e2 : (nat.),
Gamma |- e3 : (arrow (nat.) (arrow (nat.) (nat.)))
--------------------------------------
Gamma |- (natrec e1 e2 e3) : (nat.).

[T-SUCC]
Gamma |- e : (nat.)
--------------------------------------
Gamma |- (succ e) : (nat.).

[T-VAR]
member <x, T> Gamma
--------------------------------------
Gamma |- x : T.

[T-ZERO]
--------------------------------------
Gamma |- (zero.) : (nat.).

%

eliminationform: app => 0 | natrec => 0.
mode: join => inp inp out | meet => inp inp out | step => inp out | subtype => inp inp | typeof => inp inp out.
principal: join => yes yes no | meet => yes yes no | step => yes no | subtype => yes yes | typeof => no yes no.
variance: arrow => contra cov.
