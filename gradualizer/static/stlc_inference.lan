Expression e ::= x | (abs_inf (x)e) | (app e e)
Value v ::= (abs_inf (x)e)
Type T ::= (arrow T T)
Context E ::= (hole.) | (app E e) | (app v E)
Environment Gamma ::= [<x, T>...]

%

e --> e.
Gamma |- e : T.

%

[T-VAR]
member <x, T> Gamma
--------------------------------
Gamma |- x : T.

[T-ABSINF]
[x => T1]Gamma |- e : T2
--------------------------------
Gamma |- (abs_inf (x)e) : (arrow T1 T2).

[T-APP]
Gamma |- e1 : (arrow T1 T2),
Gamma |- e2 : T1
--------------------------------
Gamma |- (app e1 e2) : T2.

[R-BETA]
--------------------------------
(app (abs_inf (x)e) v) --> e{v/x}.

%

mode: typeof => inp inp out | step => inp out.
principal: typeof => no yes no | step => yes no.
variance: arrow => contra cov.
eliminationform: app => 0.
